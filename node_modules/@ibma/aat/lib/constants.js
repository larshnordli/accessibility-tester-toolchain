/******************************************************************************
 * Licensed Materials - Property of IBM
 * "Restricted Materials of IBM"
 * Â© Copyright IBM Corp. 2016 All Rights Reserved.
 *
 * Copying, redistribution and/or modification is prohibited.
 * U.S. Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 *****************************************************************************/

// Load all the modules that are needed
var pathLib = require('path');

// Used to specify all the constant
var constants = {
    DEBUG: false,

    // Specify the default rule pack server to use. (Where to pull the rules and engine from).
    rulePack: "https://cc-rules.w3ibm.mybluemix.net/js/latest/",

    // Specify default violation levels on which to fail the test.
    // i.e. If specified violation then the testcase will only fail if
    //      a violation is found uring the scan.
    failLevels: ["violation", "potentialviolation"],

    // Specify default violation levels which should be reported.
    // i.e. If specified violation then in the report it would only contain
    //      results which are level of violation.
    reportLevels: ["violation",
                   "potentialviolation",
                   "recommendation",
                   "potentialrecommendation",
                   "manual"
                  ],

    // Specify default value if screenshoot should be captured of the current page that is being scanned.
    captureScreenshots: true,

    // Specify default value for which type should the results be outputted to
    outputFormat: "json",

    // Specify default location where the results should be saved
    outputFolder: "results",

    // Specify default location where the baselines should be saved
    baselinefolder: "baselines", 

    // Specify default value if Hidden content be scanned or not.
    checkHiddenContent: false,

    // Specify default value for Which file extensions should be checked
    extensions: ["html", "htm", "svg"],

    // Specify default value for the engine file name. This the
    engineFileName: "engine-browser.js",

    // List of files to look for in that order, in the case even one is found we stop and load that as the config.
    // Theses files will be checked for in the working directory:
    //  ./.aat.yml
    //  ./.aat.yaml
    //  ./aat.js
    //  ./aat.json
    //  ./.config/.aat.yml
    //  ./.config/.aat.yaml
    //  ./.config/aat.js
    //  ./.config/aat.json
    // The node module, require will load js or json depending on which one is present, in the case
    // both json and js are present it loads js first.
    configFiles: [".aat.yml", ".aat.yaml", "aat", pathLib.join(".config", ".aat.yml"), pathLib.join(".config", ".aat.yaml"), pathLib.join(".config", "aat")]
}

// Export this the constants
module.exports = constants;
